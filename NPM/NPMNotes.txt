NPM Crash Course 

    What is NPM?

        - Node Package Manager
        - Pre-installed with Node.js
        - Easily install modules/packages on your system
        - Modules are basically JavaScript libraries
        - Makes it easy for developers to share & reuse code

    What we will Learn?

        - Install, remove, update & list packages 
        - All bout package.json
        - Local & global packages 
        - Dependencies/dev-Dependencies
        - Commands & shortcuts
        - Versioning 
        - NPM Scripts

    Downloads 

        - nodejs.org - download node 
        - npmjs.com - can download desired modules

    Package.json File 

        - Manifest file with app info 
        - Lists dependencies (name & version)
        - Specify if versions should be updated 
        - Create NPM scripts 
        - Easily create with "npm init" or npm init --yes to pass all the default questions

            Commands 

                - npm init - creates package.json file 
                - npm init --yes to pass all the default questions
                - npm config set init-author-name "samuel" - sets the author name 
                - npm get init-author-name - returns the default value 
                - npm config delete init-author-name - removes the name
                - npm install - installs all required modules from the package.json file 

    Commands 

        - cmd -v - checks your node version 
        - npm --version - checks your node version 
        - npm - gets all the list of command 
        - node file.js - run a js file
        - npm list - lists the modules in detail 
        - npm list --depth 0 - shows only the modules
   
    Installing/Uninstalling Modules 

        - npm install lodash --save ( if --save is not included then it only installs and wont add it to the json )
        - to use any installed module , we create the main file ( index.js in our case) then we pass it to a variable with
          a require - const _ = require('lodash'); // lodash is a module name 
        - npm rm lodash --save - removes module 
        - pm install lodash@4.17 --save - installs specific version 
        - npm update lodash - updates to the latest version 

    Installing/Uninstalling Dev Dependencies 

        - npm install --save-dev gulp gulp-sass  - to install dev dependencies 
        - npm install -- will install every dependency 
        - npm install --production - will only install dependency inside the json file
        - npm uninstall gulp-sass --save-dev - removes dependency 

    Semantic Versioning 

        - Version numbers explained 

            8.2.6 

            8 - refers to Major verion - Major changes, breaks the API  
            2 - refers to Minor version - New features, does not break API
            6 - referst to Patch - for Bug fixes, doesn't break anything 

            in the json File

                 "lodash": "^4.17.21"

                        - the ^ refers to install the latest minor version when npm install is run 

                 "lodash": "~4.17.21"

                        - the ~ refers to install the latest patch version 

                 "lodash": "4.17.21"

                        - if you leave the icons, will only install the exact version written 

                 "lodash": "*"

                        - installs the absolute lates version which means the latest major minor and patch (risky)

    Global Modules 

        - Example (Nodemon)
            - continuously watches your app instead of running it over and over again 
            - global modules don't go inside of json file 
            - npm install -g nodemon - installs nodemon
            - npm root -g - can chec where it is installed 
            - nodemon - runs and watches our app 

        - Example (live-server)

            - will let you run your app live on your browser
            - npm install live-server -g - installs live-server  

    Edit the test line on json 

        "test": "echo \"Error: no test specified\" && exit 1"   

        we can change this module to 
            "start": "node index.js" 

        this will run the index.js file when we type npm start   
                 
                 













